package com.liming.xiecheng.pentest0114;

import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

/**
 * @author ltf
 * @date 2022-04-14 19:37
 */
public class Test4 {
    private static int ans = 0;
    private static int INF = 1000000007;
    private static Map<String, Boolean> map = new HashMap<>();

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        backTrace(s, 0, "");
        System.out.println(ans);
    }

    private static void backTrace(String s, int startIndex, String cur) {
        if (cur.length() > 0 && new BigInteger(cur).remainder(new BigInteger("9")).intValue() == 0) {
            ans = (ans + 1) % INF;
        } else {
            map.put(cur, false);
        }
        StringBuilder sb = new StringBuilder();
        for (int i = startIndex; i < s.length(); i++) {
            sb.append(s.charAt(i));
            if (map.containsKey(cur + sb.toString())) {
                continue;
            }
            backTrace(s, i + 1, cur + sb.toString());
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
