package com.liming.qiuzhao.pentest.zoom;

import java.util.Scanner;

/**
 * @author ltf
 * @date 2022-08-10 19:44
 */
public class Test1 {
    private static int sum = 0;

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String s = in.nextLine();
        char[] colers = s.toCharArray();
        //System.out.println(s);
        int[][] tree = new int[n + 1][n + 1];
        for (int i = 0; i < n - 1; i++) {
            int u = in.nextInt();
            int v = in.nextInt();
            tree[u][v] = 1;
            tree[v][u] = 1;
        }
        int[] res = new int[n + 1];
        dfs(tree, 1, colers, new boolean[n + 1], new int[]{0, 0}, res);
        for (int i = 1; i <= n; i++) {
            sum += res[i];
        }
        System.out.println(sum);
    }

    private static void dfs(int[][] tree, int curindex, char[] colers, boolean[] isuse, int[] res, int[] fin) {
        if (colers[curindex - 1] == 'R') res[0] += 1;
        else res[1] += 1;
        isuse[curindex] = true;
        int sum = 0;
        for (int i = 1; i < tree[0].length; i++) {
            if (tree[curindex][i] == 1 && !isuse[i]) {
                dfs(tree, i, colers, isuse, res, fin);
            }
        }
        fin[curindex] = Math.abs(res[0] - res[1]);
    }

    //private void dfs(int[][] tree, int curindex, char[] colers, boolean[] isuse, int sum) {
    //    if (judje())
    //}
    //private static class TreeNode{
    //    int val = 1;
    //    TreeNode left;
    //    TreeNode right;
    //
    //}
}
