package com.liming.qiuzhao.pentest.weiruan;

/**
 * @author ltf
 * @date 2022-08-19 20:27
 */
public class Test3 {
    public int solution(int[] A, int[] B) {
        // write your code in Java 8 (Java SE 8)
        //new StringBuilder().dele
        int[][] tree = new int[A.length + 1][B.length + 1];
        for (int i = 0; i < A.length; i++) {
            tree[A[i]][B[i]] = 1;
            tree[B[i]][A[i]] = 1;
        }
        boolean[] isvis = new boolean[A.length + 1];
        isvis[0] = true;
        int ans = 0;
        for (int i = 0; i < tree.length; i++) {
            if(tree[0][i] == 1){
                isvis[i] = true;
                ans += digui(tree,i,isvis)[1];
            }
        }
        return ans;
    }

    private int[] digui(int[][] tree, int startNode, boolean[] isvis) {
        int res = 0, num = 1;
        boolean hasChild = false;
        for (int i = 0; i < tree[startNode].length; i++) {
                if(tree[startNode][i] == 0 || isvis[i]) continue;
                isvis[i] = true;
                int[] digui = digui(tree, i, isvis);
                num += digui[0];
                res += digui[1];
                hasChild = true;
        }
        if (!hasChild) {
            return new int[]{1, 1};
        } else {
            res += num / 5;
            res += num % 5 == 0 ? 0 : 1;
            return new int[]{num,res};
        }
    }

    public static void main(String[] args) {
        //int[] a = new int[]{0, 1, 1};
        //int[] b = new int[]{1, 2, 3};
        int[] a = new int[]{1, 1, 1, 9, 9, 9, 9, 7, 8};
        int[] b = new int[]{2, 0, 3, 1, 6, 5, 4, 0, 0};
        System.out.println(new Test3().solution(a, b));
    }


}
