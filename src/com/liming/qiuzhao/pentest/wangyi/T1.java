package com.liming.qiuzhao.pentest.wangyi;

import java.util.Scanner;

/**
 * @author ltf
 * @date 2022-08-27 19:23
 *
 * 3
 * 3 5
 * 1x1
 * xox
 * 1x1
 *
 * 3 7
 * 1x1
 * xox
 * 1x1
 *
 * 5 7
 * 13S31
 * LKcKL
 * Sc2cS
 * LKcKL
 * 13S31
 *
 */
/*
1
5 7
13S31
LKcKL
Sc2cS
LKcKL
13S31

3
3 5
1x1
xox
1x1

3 7
1x1
xox
1x1

5 7
13S31
LKcKL
Sc2cS
LKcKL
13S31


11x11
11x11
xxoxx
11x11
11x11

oxxoxxo
x11x11x
x11x11x
oxxoxxo
x11x11x
x11x11x
oxxoxxo

113S311
113S311
LLKcKLL
SSc2cSS
LLKcKLL
113S311
113S311

 */
public class T1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t > 0){
            t--;
            int n = sc.nextInt();
            int m = sc.nextInt();
            char[][] paper = new char[n][n];
            sc.nextLine();
            for (int i = 0; i < n; i++) {
                paper[i] = sc.nextLine().toCharArray();
            }
            char[][] wall = getWall(paper, n, m);
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < wall.length; i++) {
                for (int j = 0; j < wall[0].length; j++) {
                    sb.append(wall[i][j]);
                }
                System.out.println(sb.toString());
                sb.delete(0,sb.length() - 1);
            }
        }
    }
    private static char[][] getWall(char[][] paper, int n, int m){
        int left = m % n;
        if(left % 2 == 1){
            left+=n;
        }
        char[][] res = new char[m][m];
        left /=2;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < m; j++){
                //四个角落
                if(i < left && j < left){
                    res[i][j] = paper[n - left + i][n - left + j];
                    continue;
                }else if(j >= m - left && i < left){
                    res[i][j] = paper[n - left + i][j - m + left];
                    continue;
                }else if(i >= m - left && j >= m - left){
                    res[i][j] = paper[i - m + left][j - m + left];
                    continue;
                }else if(i >= m - left && j < left){
                    res[i][j] = paper[i - m + left][n - left + j];
                    continue;
                }
                if(i < left){
                    res[i][j] = paper[n - left + i][(j - left) % n];
                    continue;
                }else if(j < left){
                    res[i][j] = paper[(i - left) % n][n - left + j];
                    continue;
                }else if(i >= m - left){
                    res[i][j] = paper[i - m + left][(j - left) % n];
                    continue;
                }else if(j >= m - left){
                    res[i][j] = paper[(i - left) % n][j - m + left];
                    continue;
                }
                res[i][j] = paper[(i - left)%n][(j - left) % n];
            }
        }
        return res;
    }
}
