package com.liming.qiuzhao.pentest.wangyi;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * @author ltf
 * @date 2022-08-27 20:56
 */
/*
2
4
0 0 2 2
1 1 4 3
2 4 4 7
2 5 3 6
3
0 0 1 1
1 1 2 2
1 0 2 1
 */
public class T2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t > 0) {
            t--;
            int res = 0;
            int n = sc.nextInt();
            sc.nextLine();
            List<Juxing> list = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                String[] s = sc.nextLine().split(" ");
                list.add(new Juxing(Integer.valueOf(s[0]), Integer.valueOf(s[1]), Integer.valueOf(s[2]), Integer.valueOf(s[3])));
            }
            for (int i = 0; i < n - 1; i++) {
                for (int j = i + 1; j < n; j++) {
                    int xiangjiao = list.get(i).isXiangjiao(list.get(j));
                    if (xiangjiao != 0) {
                        res += list.get(i).getAir() + list.get(j).getAir() - xiangjiao;
                    }
                }
            }
            System.out.println(res);
        }
    }

    private static class Juxing {
        private int x1;
        private int y1;
        private int x2;
        private int y2;

        public Juxing(int x1, int y1, int x2, int y2) {
            this.x1 = x1;
            this.y1 = y1;
            this.x2 = x2;
            this.y2 = y2;
        }

        public int isXiangjiao(Juxing j2) {
            int jmx1;
            int jix1;
            if (x1 > x2) {
                jmx1 = x1;
                jix1 = x2;
            } else {
                jmx1 = x2;
                jix1 = x1;
            }
            int jmy1;
            int jiy1;
            if (y1 > y2) {
                jmy1 = y1;
                jiy1 = y2;
            } else {
                jmy1 = y2;
                jiy1 = y1;
            }
            int jmx2;
            int jix2;
            if (j2.x1 > j2.x2) {
                jmx2 = j2.x1;
                jix2 = j2.x2;
            } else {
                jmx2 = j2.x2;
                jix2 = j2.x1;
            }
            int jmy2;
            int jiy2;
            if (j2.y1 > j2.y2) {
                jmy2 = j2.y1;
                jiy2 = j2.y2;
            } else {
                jmy2 = j2.y2;
                jiy2 = j2.y1;
            }
            if (jix1 >= jmx2 || jix2 >= jmx1) {
                return 0;
            }
            if (jiy1 >= jmy2 || jiy2 >= jmy1) {
                return 0;
            }

            int tmpy = 0;
            int tmpx = 0;
            if(jmy2 > jmy1){
                tmpy = jmy1 - Math.max(jiy2,jiy1);
            }else{
                tmpy = jmy2 - Math.max(jiy2,jiy1);
            }
            if(jmx2 > jmx1){
                tmpx = jmx1 - Math.max(jix2,jix1);
            }else{
                tmpx = jmx2 - Math.max(jix2,jix1);
            }
            return tmpx * tmpy;
        }

        public int getAir() {
            return Math.abs(x1 - x2) * Math.abs(y1 - y2);
        }
    }
}
