package com.liming.qiuzhao.pentest.renshou;

import java.util.Scanner;

/**
 * @author ltf
 * @date 2022-09-04 19:55
 */
/*
9
1 2 3 3 3 2 4 2 1

3
1 1 1
 */
public class T3 {

    private static int res = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a  = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        dfs(a,0,0,new boolean[101],0);
        dfs(a,0,1,new boolean[101],1);
        System.out.println(res);
    }

    //public static void main(String[] args) {
    //    Scanner sc = new Scanner(System.in);
    //    int n = sc.nextInt();
    //    Map<Integer, Rank> map = new HashMap<>();
    //    for (int i = 0; i < n; i++) {
    //        int c = sc.nextInt();
    //        if (map.containsKey(c)) {
    //            map.get(c).k++;
    //        } else {
    //            Rank rank = new Rank(c);
    //            map.put(c, rank);
    //        }
    //    }
    //    //List<Rank> list = new ArrayList<>(map.values());
    //    //Collections.sort(list,(x,y)->{
    //    //    return y.k - x.k;
    //    //});
    //    int res = 0;
    //    for (Rank value : map.values()) {
    //        res += value.k * value.k;
    //    }
    //    System.out.println(res);
    //}
    //
    //private static class Rank {
    //    private int num;
    //    private int k;
    //
    //    public Rank(int num) {
    //        this.num = num;
    //        this.k = 1;
    //    }
    //}
    //public static void main(String[] args) {
    //    Scanner sc = new Scanner(System.in);
    //    int n = sc.nextInt();
    //    List<Integer> list = new ArrayList<>();
    //    for (int i = 0; i < n; i++) {
    //        list.add(sc.nextInt());
    //    }
    //    int res = 0;
    //    while (list.size() > 0) {
    //        int maxlen = maxlen(list);
    //        res += maxlen * maxlen;
    //
    //    }
    //    System.out.println(res);
    //}
    //
    //
    //private static int maxlen(List<Integer> list) {
    //    int len = 1;
    //    int index = 0;
    //    int tmp = 1;
    //    for (int i = 1; i < list.size(); i++) {
    //        if (list.get(i) == list.get(i - 1)) {
    //            tmp++;
    //        } else {
    //            tmp = 1;
    //        }
    //        if (len < tmp) {
    //            len = tmp;
    //            index = i;
    //        }
    //    }
    //    for (int i = 0; i < len; i++) {
    //        int j = list.remove(index - len + 1);
    //    }
    //    return len;
    //}

    private static void dfs(int[] a, int cur, int value, boolean[] vis,int count) {
        if(res < value){
            res = value;
        }
        if (cur == a.length) {
            return;
        }

        for (int i = cur; i < a.length; i++) {
            if (i > 0 && a[i - 1] == a[i]){
                // 相邻直接用
                dfs(a,i + 1,value - count * count + (count + 1) * (count + 1),vis,count + 1);
            }else{
                // buxianglin 用
                dfs(a,i + 1,value + 1,vis,1);
                dfs(a,i + 1,value,vis,0);
            }
        }
    }
}
